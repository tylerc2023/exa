// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Launcher Container renders correctly 1`] = `
<RCTSafeAreaView
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RCTScrollView>
    <View>
      <Modal
        animationType="fade"
        hardwareAccelerated={false}
        onRequestClose={[Function]}
        transparent={true}
        visible={false}
      >
        <View
          style={
            Object {
              "backgroundColor": "rgba(0,0,0,0.2)",
              "flex": 1,
              "justifyContent": "center",
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "alignSelf": "center",
                "backgroundColor": "#fafafa",
                "elevation": 1,
                "padding": 20,
                "shadowColor": "#000",
                "shadowOffset": Object {
                  "height": 2,
                  "width": 0,
                },
                "shadowOpacity": 0.8,
                "shadowRadius": 2,
                "width": 710,
              }
            }
          >
            <Text>
              This is content inside of modal component
            </Text>
            <View
              accessibilityRole="button"
              accessibilityStates={Array []}
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  Array [
                    undefined,
                  ]
                }
              >
                <Text
                  style={
                    Array [
                      undefined,
                    ]
                  }
                >
                  Close modal
                </Text>
              </View>
            </View>
          </View>
        </View>
      </Modal>
      <Text>
        hello hello
      </Text>
      <RCTScrollView
        data={
          Array [
            Object {
              "items": Array [
                Object {
                  "title": "individual",
                },
                Object {
                  "title": "couple",
                },
                Object {
                  "title": "teen",
                },
              ],
              "key": "1",
              "next": "2",
              "title": "What type of counseling are you looking for",
            },
            Object {
              "key": "2",
              "title": "2",
            },
            Object {
              "key": "3",
              "title": "3",
            },
            Object {
              "key": "4",
              "title": "4",
            },
            Object {
              "key": "5",
              "title": "5",
            },
          ]
        }
        disableVirtualization={false}
        getItem={[Function]}
        getItemCount={[Function]}
        horizontal={true}
        initialNumToRender={10}
        keyExtractor={[Function]}
        maxToRenderPerBatch={10}
        numColumns={1}
        onContentSizeChange={[Function]}
        onEndReachedThreshold={2}
        onLayout={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        onViewableItemsChanged={[Function]}
        pagingEnabled={true}
        removeClippedSubviews={true}
        renderItem={[Function]}
        scrollEnabled={false}
        scrollEventThrottle={50}
        stickyHeaderIndices={Array []}
        updateCellsBatchingPeriod={50}
        viewabilityConfigCallbackPairs={
          Array [
            Object {
              "onViewableItemsChanged": [Function],
              "viewabilityConfig": undefined,
            },
          ]
        }
        windowSize={21}
      >
        <View>
          <View
            onLayout={[Function]}
            style={
              Array [
                Object {
                  "flexDirection": "row",
                },
                null,
              ]
            }
          >
            <View
              style={
                Object {
                  "width": 750,
                }
              }
            >
              <Text>
                What type of counseling are you looking for
              </Text>
              <View
                accessibilityRole="button"
                accessibilityStates={Array []}
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  style={
                    Array [
                      undefined,
                    ]
                  }
                >
                  <Text
                    style={
                      Array [
                        undefined,
                      ]
                    }
                  >
                    individual
                  </Text>
                </View>
              </View>
              <View
                accessibilityRole="button"
                accessibilityStates={Array []}
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  style={
                    Array [
                      undefined,
                    ]
                  }
                >
                  <Text
                    style={
                      Array [
                        undefined,
                      ]
                    }
                  >
                    couple
                  </Text>
                </View>
              </View>
              <View
                accessibilityRole="button"
                accessibilityStates={Array []}
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  style={
                    Array [
                      undefined,
                    ]
                  }
                >
                  <Text
                    style={
                      Array [
                        undefined,
                      ]
                    }
                  >
                    teen
                  </Text>
                </View>
              </View>
              <View
                accessibilityRole="button"
                accessibilityStates={Array []}
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  style={
                    Array [
                      undefined,
                    ]
                  }
                >
                  <Text
                    style={
                      Array [
                        undefined,
                      ]
                    }
                  >
                    next
                  </Text>
                </View>
              </View>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={
              Array [
                Object {
                  "flexDirection": "row",
                },
                null,
              ]
            }
          >
            <View
              style={
                Object {
                  "width": 750,
                }
              }
            >
              <Text>
                2
              </Text>
              <View
                style={
                  Object {
                    "backgroundColor": "pink",
                    "flex": 1,
                    "height": 20,
                  }
                }
              />
              <View
                accessibilityRole="button"
                accessibilityStates={Array []}
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  style={
                    Array [
                      undefined,
                    ]
                  }
                >
                  <Text
                    style={
                      Array [
                        undefined,
                      ]
                    }
                  >
                    next
                  </Text>
                </View>
              </View>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={
              Array [
                Object {
                  "flexDirection": "row",
                },
                null,
              ]
            }
          >
            <View
              style={
                Object {
                  "width": 750,
                }
              }
            >
              <Text>
                3
              </Text>
              <View
                style={
                  Object {
                    "backgroundColor": "pink",
                    "flex": 1,
                    "height": 20,
                  }
                }
              />
              <View
                accessibilityRole="button"
                accessibilityStates={Array []}
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  style={
                    Array [
                      undefined,
                    ]
                  }
                >
                  <Text
                    style={
                      Array [
                        undefined,
                      ]
                    }
                  >
                    next
                  </Text>
                </View>
              </View>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={
              Array [
                Object {
                  "flexDirection": "row",
                },
                null,
              ]
            }
          >
            <View
              style={
                Object {
                  "width": 750,
                }
              }
            >
              <Text>
                4
              </Text>
              <View
                style={
                  Object {
                    "backgroundColor": "pink",
                    "flex": 1,
                    "height": 20,
                  }
                }
              />
              <View
                accessibilityRole="button"
                accessibilityStates={Array []}
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  style={
                    Array [
                      undefined,
                    ]
                  }
                >
                  <Text
                    style={
                      Array [
                        undefined,
                      ]
                    }
                  >
                    next
                  </Text>
                </View>
              </View>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={
              Array [
                Object {
                  "flexDirection": "row",
                },
                null,
              ]
            }
          >
            <View
              style={
                Object {
                  "width": 750,
                }
              }
            >
              <Text>
                5
              </Text>
              <View
                style={
                  Object {
                    "backgroundColor": "pink",
                    "flex": 1,
                    "height": 20,
                  }
                }
              />
              <View
                accessibilityRole="button"
                accessibilityStates={Array []}
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  style={
                    Array [
                      undefined,
                    ]
                  }
                >
                  <Text
                    style={
                      Array [
                        undefined,
                      ]
                    }
                  >
                    next
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </RCTScrollView>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
            "padding": 20,
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#fafafa",
              "elevation": 1,
              "padding": 20,
              "shadowColor": "#000",
              "shadowOffset": Object {
                "height": 2,
                "width": 0,
              },
              "shadowOpacity": 0.8,
              "shadowRadius": 2,
            }
          }
        >
          <Text>
            mission
          </Text>
          <Text
            style={
              Object {
                "color": "#666",
              }
            }
          >
             We strive to offer our customers the lowest possible prices the
                best available selection and the utmost convenience.
          </Text>
        </View>
      </View>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
            "padding": 20,
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#fafafa",
              "elevation": 1,
              "padding": 20,
              "shadowColor": "#000",
              "shadowOffset": Object {
                "height": 2,
                "width": 0,
              },
              "shadowOpacity": 0.8,
              "shadowRadius": 2,
            }
          }
        >
          <Text>
            Vision
          </Text>
          <Text
            style={
              Object {
                "color": "#666",
              }
            }
          >
            To be Earth’s most customer-centric company where customers can find and discover anything they might want to buy online.
          </Text>
        </View>
      </View>
    </View>
  </RCTScrollView>
</RCTSafeAreaView>
`;
