// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Launcher Container renders correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "hsl(210, 17%, 98%)",
      "flex": 1,
      "padding": 20,
    }
  }
>
  <View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "flexDirection": "row",
          "opacity": 1,
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "fontSize": 14,
              "fontWeight": "300",
              "letterSpacing": 0.25,
            },
            undefined,
            undefined,
            Object {
              "textTransform": "capitalize",
            },
          ]
        }
      >
        bob
      </Text>
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <TextInput
        allowFontScaling={true}
        blurOnSubmit={true}
        disableFullscreenUI={true}
        editable={true}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        placeholderTextColor="hsl(208, 7%, 46%)"
        selectionColor="hsl(211, 100%, 50%)"
        style={
          Array [
            Object {
              "backgroundColor": "hsl(0, 100%, 100%)",
              "borderColor": "hsl(208, 7%, 46%)",
              "borderRadius": 4,
              "borderWidth": 2,
              "flex": 1,
              "marginTop": 4,
              "padding": 8,
              "paddingRight": 40,
            },
            undefined,
            false,
            Object {
              "fontSize": 14,
              "fontWeight": "300",
              "letterSpacing": 0.25,
            },
            undefined,
          ]
        }
        underlineColorAndroid="transparent"
        value=""
      />
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "flexDirection": "row",
          "opacity": 1,
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "fontSize": 14,
              "fontWeight": "300",
              "letterSpacing": 0.25,
            },
            undefined,
            undefined,
            Object {
              "color": "hsl(354, 70%, 54%)",
            },
          ]
        }
      >
         
      </Text>
    </View>
  </View>
  <View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "flexDirection": "row",
          "opacity": 1,
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "fontSize": 14,
              "fontWeight": "300",
              "letterSpacing": 0.25,
            },
            undefined,
            undefined,
            Object {
              "textTransform": "capitalize",
            },
          ]
        }
      >
        EMAIL
      </Text>
      <Text
        style={
          Array [
            Object {
              "fontSize": 14,
              "fontWeight": "300",
              "letterSpacing": 0.25,
            },
            undefined,
            undefined,
            Array [
              Object {
                "textTransform": "capitalize",
              },
              Object {
                "color": "hsl(208, 7%, 46%)",
              },
            ],
          ]
        }
      >
         - Optional
      </Text>
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <TextInput
        allowFontScaling={true}
        blurOnSubmit={true}
        disableFullscreenUI={true}
        editable={true}
        keyboardType="email-address"
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        placeholder="example@gmail.com"
        placeholderTextColor="hsl(208, 7%, 46%)"
        selectionColor="hsl(211, 100%, 50%)"
        style={
          Array [
            Object {
              "backgroundColor": "hsl(0, 100%, 100%)",
              "borderColor": "hsl(208, 7%, 46%)",
              "borderRadius": 4,
              "borderWidth": 2,
              "flex": 1,
              "marginTop": 4,
              "padding": 8,
              "paddingRight": 40,
            },
            undefined,
            false,
            Object {
              "fontSize": 14,
              "fontWeight": "300",
              "letterSpacing": 0.25,
            },
            undefined,
          ]
        }
        underlineColorAndroid="transparent"
        value=""
      />
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "flexDirection": "row",
          "opacity": 1,
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "fontSize": 14,
              "fontWeight": "300",
              "letterSpacing": 0.25,
            },
            undefined,
            undefined,
            Object {
              "color": "hsl(354, 70%, 54%)",
            },
          ]
        }
      >
         
      </Text>
    </View>
  </View>
  <View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "flexDirection": "row",
          "opacity": 1,
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "fontSize": 14,
              "fontWeight": "300",
              "letterSpacing": 0.25,
            },
            undefined,
            undefined,
            Object {
              "textTransform": "capitalize",
            },
          ]
        }
      >
        Password
      </Text>
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <TextInput
        allowFontScaling={true}
        blurOnSubmit={true}
        disableFullscreenUI={true}
        editable={true}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        placeholder="•••••••"
        placeholderTextColor="hsl(208, 7%, 46%)"
        secureTextEntry={true}
        selectionColor="hsl(211, 100%, 50%)"
        style={
          Array [
            Object {
              "backgroundColor": "hsl(0, 100%, 100%)",
              "borderColor": "hsl(208, 7%, 46%)",
              "borderRadius": 4,
              "borderWidth": 2,
              "flex": 1,
              "marginTop": 4,
              "padding": 8,
              "paddingRight": 40,
            },
            undefined,
            false,
            Object {
              "fontSize": 14,
              "fontWeight": "300",
              "letterSpacing": 0.25,
            },
            undefined,
          ]
        }
        underlineColorAndroid="transparent"
        value=""
      />
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "flexDirection": "row",
          "opacity": 1,
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "fontSize": 14,
              "fontWeight": "300",
              "letterSpacing": 0.25,
            },
            undefined,
            undefined,
            Object {
              "color": "hsl(354, 70%, 54%)",
            },
          ]
        }
      >
         
      </Text>
    </View>
  </View>
  <View>
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <TextInput
        allowFontScaling={true}
        blurOnSubmit={true}
        disableFullscreenUI={true}
        editable={true}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        placeholder="•••••••"
        placeholderTextColor="hsl(208, 7%, 46%)"
        secureTextEntry={true}
        selectionColor="hsl(211, 100%, 50%)"
        style={
          Array [
            Object {
              "backgroundColor": "hsl(0, 100%, 100%)",
              "borderColor": "hsl(208, 7%, 46%)",
              "borderRadius": 4,
              "borderWidth": 2,
              "flex": 1,
              "marginTop": 4,
              "padding": 8,
              "paddingRight": 40,
            },
            Object {
              "borderColor": "hsl(354, 70%, 54%)",
            },
            false,
            Object {
              "fontSize": 14,
              "fontWeight": "300",
              "letterSpacing": 0.25,
            },
            undefined,
          ]
        }
        underlineColorAndroid="transparent"
        value=""
      />
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "flexDirection": "row",
          "opacity": 1,
        }
      }
    >
      <View>
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": "hsl(354, 70%, 54%)",
                "fontSize": 24,
              },
              undefined,
              Object {
                "fontFamily": undefined,
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
      <Text
        style={
          Array [
            Object {
              "fontSize": 14,
              "fontWeight": "300",
              "letterSpacing": 0.25,
            },
            undefined,
            undefined,
            Object {
              "color": "hsl(354, 70%, 54%)",
            },
          ]
        }
      >
        fail
      </Text>
    </View>
  </View>
  <View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "flexDirection": "row",
          "opacity": 1,
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "fontSize": 14,
              "fontWeight": "300",
              "letterSpacing": 0.25,
            },
            undefined,
            undefined,
            Object {
              "textTransform": "capitalize",
            },
          ]
        }
      >
        bob
      </Text>
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <TextInput
        allowFontScaling={true}
        blurOnSubmit={true}
        disableFullscreenUI={true}
        editable={true}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        placeholder="Hello"
        placeholderTextColor="hsl(208, 7%, 46%)"
        selectionColor="hsl(211, 100%, 50%)"
        style={
          Array [
            Object {
              "backgroundColor": "hsl(0, 100%, 100%)",
              "borderColor": "hsl(208, 7%, 46%)",
              "borderRadius": 4,
              "borderWidth": 2,
              "flex": 1,
              "marginTop": 4,
              "padding": 8,
              "paddingRight": 40,
            },
            undefined,
            false,
            Object {
              "fontSize": 14,
              "fontWeight": "300",
              "letterSpacing": 0.25,
            },
            undefined,
          ]
        }
        underlineColorAndroid="transparent"
        value=""
      />
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "flexDirection": "row",
          "opacity": 1,
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "fontSize": 14,
              "fontWeight": "300",
              "letterSpacing": 0.25,
            },
            undefined,
            undefined,
            Object {
              "color": "hsl(354, 70%, 54%)",
            },
          ]
        }
      >
         
      </Text>
    </View>
  </View>
  <View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "flexDirection": "row",
          "opacity": 1,
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "fontSize": 14,
              "fontWeight": "300",
              "letterSpacing": 0.25,
            },
            undefined,
            undefined,
            Object {
              "textTransform": "capitalize",
            },
          ]
        }
      >
        bob
      </Text>
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <TextInput
        allowFontScaling={true}
        blurOnSubmit={true}
        disableFullscreenUI={true}
        editable={true}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        placeholderTextColor="hsl(208, 7%, 46%)"
        selectionColor="hsl(211, 100%, 50%)"
        style={
          Array [
            Object {
              "backgroundColor": "hsl(0, 100%, 100%)",
              "borderColor": "hsl(208, 7%, 46%)",
              "borderRadius": 4,
              "borderWidth": 2,
              "flex": 1,
              "marginTop": 4,
              "padding": 8,
              "paddingRight": 40,
            },
            undefined,
            false,
            Object {
              "fontSize": 14,
              "fontWeight": "300",
              "letterSpacing": 0.25,
            },
            undefined,
          ]
        }
        underlineColorAndroid="transparent"
        value=""
      />
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "flexDirection": "row",
          "opacity": 1,
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "fontSize": 14,
              "fontWeight": "300",
              "letterSpacing": 0.25,
            },
            undefined,
            undefined,
            Object {
              "color": "hsl(354, 70%, 54%)",
            },
          ]
        }
      >
         
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "hsl(211, 100%, 50%)",
        "borderColor": "transparent",
        "borderRadius": 4,
        "borderWidth": 1,
        "flexDirection": "row",
        "height": 36,
        "justifyContent": "center",
        "opacity": 1,
        "paddingHorizontal": 16,
      }
    }
  >
    <Text
      style={
        Array [
          Object {
            "fontSize": 14,
            "fontWeight": "600",
            "letterSpacing": 0.75,
          },
          Object {
            "textAlign": "center",
          },
          undefined,
          Array [
            Object {
              "backgroundColor": "transparent",
              "color": "hsl(211, 100%, 50%)",
            },
            undefined,
            Object {
              "color": "hsl(0, 100%, 100%)",
            },
            undefined,
            undefined,
          ],
        ]
      }
    >
      COMPLETE FORM
    </Text>
  </View>
</View>
`;
