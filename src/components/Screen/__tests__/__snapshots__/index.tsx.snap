// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "backgroundColor": "hsl(0, 0%, 100%)",
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "borderBottomColor": "hsl(210, 10%, 23%)",
        "borderBottomWidth": 0,
        "flexDirection": "row",
        "height": 72,
        "justifyContent": "space-between",
      }
    }
  >
    <View
      accessible={true}
      focusable={false}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "flex": 0.2,
          "opacity": 1,
          "padding": 12,
        }
      }
    />
    <View
      accessible={true}
      focusable={false}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "flex": 0.2,
          "opacity": 1,
          "padding": 12,
        }
      }
    />
  </View>
  <RCTScrollView
    automaticallyAdjustContentInsets={false}
    contentContainerStyle={
      Array [
        Object {
          "flex": 1,
          "padding": 0,
        },
        undefined,
      ]
    }
    contentInset={
      Object {
        "bottom": 0,
      }
    }
    enableAutomaticScroll={true}
    enableOnAndroid={false}
    enableResetScrollToCoords={true}
    extraHeight={75}
    extraScrollHeight={0}
    getScrollResponder={[Function]}
    handleOnScroll={[Function]}
    keyboardDismissMode="interactive"
    keyboardOpeningTime={250}
    keyboardShouldPersistTaps="handled"
    keyboardSpace={0}
    onScroll={[Function]}
    resetKeyboardSpace={[Function]}
    scrollEnabled={true}
    scrollEventThrottle={1}
    scrollForExtraHeightOnAndroid={[Function]}
    scrollIntoView={[Function]}
    scrollToEnd={[Function]}
    scrollToFocusedInput={[Function]}
    scrollToPosition={[Function]}
    showsVerticalScrollIndicator={true}
    update={[Function]}
    viewIsInsideTabBar={false}
  >
    <View>
      <View />
    </View>
  </RCTScrollView>
</RCTSafeAreaView>
`;

exports[`renders correctly with header 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "backgroundColor": "hsl(0, 0%, 100%)",
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "borderBottomColor": "hsl(210, 10%, 23%)",
        "borderBottomWidth": 0,
        "flexDirection": "row",
        "height": 72,
        "justifyContent": "space-between",
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "flex": 0.2,
          "opacity": 1,
          "padding": 12,
        }
      }
    >
      <View>
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": "hsl(210, 10%, 23%)",
                "fontSize": 24,
              },
              Array [
                undefined,
                undefined,
              ],
              Object {
                "fontFamily": "Material Design Icons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
    </View>
    <Text
      style={
        Object {
          "color": "hsl(0, 0%, 0%)",
          "fontSize": 30,
          "fontWeight": "100",
          "letterSpacing": -0.5,
          "opacity": 1,
        }
      }
    >
      hello
    </Text>
    <View
      accessible={true}
      focusable={true}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "flex": 0.2,
          "opacity": 1,
          "padding": 12,
        }
      }
    >
      <View
        style={
          Object {
            "alignSelf": "flex-end",
          }
        }
      >
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": "hsl(210, 10%, 23%)",
                "fontSize": 24,
              },
              Array [
                undefined,
                undefined,
              ],
              Object {
                "fontFamily": "Material Design Icons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
    </View>
  </View>
  <RCTScrollView
    automaticallyAdjustContentInsets={false}
    contentContainerStyle={
      Array [
        Object {
          "flex": 1,
          "padding": 0,
        },
        undefined,
      ]
    }
    contentInset={
      Object {
        "bottom": 0,
      }
    }
    enableAutomaticScroll={true}
    enableOnAndroid={false}
    enableResetScrollToCoords={true}
    extraHeight={75}
    extraScrollHeight={0}
    getScrollResponder={[Function]}
    handleOnScroll={[Function]}
    keyboardDismissMode="interactive"
    keyboardOpeningTime={250}
    keyboardShouldPersistTaps="handled"
    keyboardSpace={0}
    onScroll={[Function]}
    resetKeyboardSpace={[Function]}
    scrollEnabled={true}
    scrollEventThrottle={1}
    scrollForExtraHeightOnAndroid={[Function]}
    scrollIntoView={[Function]}
    scrollToEnd={[Function]}
    scrollToFocusedInput={[Function]}
    scrollToPosition={[Function]}
    showsVerticalScrollIndicator={true}
    update={[Function]}
    viewIsInsideTabBar={false}
  >
    <View>
      <View />
    </View>
  </RCTScrollView>
</RCTSafeAreaView>
`;

exports[`renders correctly with icons 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "backgroundColor": "hsl(0, 0%, 100%)",
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "borderBottomColor": "hsl(210, 10%, 23%)",
        "borderBottomWidth": 0,
        "flexDirection": "row",
        "height": 72,
        "justifyContent": "space-between",
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "flex": 0.2,
          "opacity": 1,
          "padding": 12,
        }
      }
    >
      <View>
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": "hsl(210, 10%, 23%)",
                "fontSize": 24,
              },
              Array [
                undefined,
                undefined,
              ],
              Object {
                "fontFamily": "Material Design Icons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
    </View>
    <Text
      style={
        Object {
          "color": "hsl(0, 0%, 0%)",
          "fontSize": 30,
          "fontWeight": "100",
          "letterSpacing": -0.5,
          "opacity": 1,
        }
      }
    >
      hello
    </Text>
    <View
      accessible={true}
      focusable={true}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "flex": 0.2,
          "opacity": 1,
          "padding": 12,
        }
      }
    >
      <View
        style={
          Object {
            "alignSelf": "flex-end",
          }
        }
      >
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": "hsl(210, 10%, 23%)",
                "fontSize": 24,
              },
              Array [
                undefined,
                undefined,
              ],
              Object {
                "fontFamily": "Material Design Icons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
    </View>
  </View>
  <RCTScrollView
    automaticallyAdjustContentInsets={false}
    contentContainerStyle={
      Array [
        Object {
          "flex": 1,
          "padding": 0,
        },
        undefined,
      ]
    }
    contentInset={
      Object {
        "bottom": 0,
      }
    }
    enableAutomaticScroll={true}
    enableOnAndroid={false}
    enableResetScrollToCoords={true}
    extraHeight={75}
    extraScrollHeight={0}
    getScrollResponder={[Function]}
    handleOnScroll={[Function]}
    keyboardDismissMode="interactive"
    keyboardOpeningTime={250}
    keyboardShouldPersistTaps="handled"
    keyboardSpace={0}
    onScroll={[Function]}
    resetKeyboardSpace={[Function]}
    scrollEnabled={true}
    scrollEventThrottle={1}
    scrollForExtraHeightOnAndroid={[Function]}
    scrollIntoView={[Function]}
    scrollToEnd={[Function]}
    scrollToFocusedInput={[Function]}
    scrollToPosition={[Function]}
    showsVerticalScrollIndicator={true}
    update={[Function]}
    viewIsInsideTabBar={false}
  >
    <View>
      <View />
    </View>
  </RCTScrollView>
</RCTSafeAreaView>
`;
