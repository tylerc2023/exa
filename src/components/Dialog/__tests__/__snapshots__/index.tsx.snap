// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Dialog component renders correctly with defaults and hidden 1`] = `
<Modal
  hardwareAccelerated={false}
  transparent={true}
  visible={true}
>
  <View
    accessible={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "hsla(0, 0%, 0%, 0.5)",
        "flex": 1,
        "flexDirection": "column",
        "justifyContent": "center",
        "padding": 32,
      }
    }
  >
    <View
      accessible={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "hsl(0, 100%, 100%)",
          "borderRadius": 16,
          "marginHorizontal": 60,
          "maxWidth": 500,
          "paddingBottom": 36,
          "paddingHorizontal": 36,
          "paddingTop": 52,
          "width": "100%",
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "fontSize": 24,
              "fontWeight": "300",
              "letterSpacing": 0,
            },
            undefined,
            undefined,
            Object {
              "paddingBottom": 12,
            },
          ]
        }
      >
        bob
      </Text>
      <View
        style={
          Array [
            Object {
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingTop": 52,
            },
            undefined,
          ]
        }
      />
    </View>
  </View>
</Modal>
`;

exports[`Dialog component renders correctly with defaults and visible 1`] = `
<Modal
  hardwareAccelerated={false}
  transparent={true}
  visible={true}
>
  <View
    accessible={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "hsla(0, 0%, 0%, 0.5)",
        "flex": 1,
        "flexDirection": "column",
        "justifyContent": "center",
        "padding": 32,
      }
    }
  >
    <View
      accessible={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "hsl(0, 100%, 100%)",
          "borderRadius": 16,
          "marginHorizontal": 60,
          "maxWidth": 500,
          "paddingBottom": 36,
          "paddingHorizontal": 36,
          "paddingTop": 52,
          "width": "100%",
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "fontSize": 24,
              "fontWeight": "300",
              "letterSpacing": 0,
            },
            undefined,
            undefined,
            Object {
              "paddingBottom": 12,
            },
          ]
        }
      >
        bob
      </Text>
      <View
        style={
          Array [
            Object {
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingTop": 52,
            },
            undefined,
          ]
        }
      />
    </View>
  </View>
</Modal>
`;

exports[`Dialog component renders correctly with props 1`] = `
<Modal
  hardwareAccelerated={false}
  transparent={true}
  visible={true}
>
  <View
    accessible={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "hsla(0, 0%, 0%, 0.5)",
        "flex": 1,
        "flexDirection": "column",
        "justifyContent": "center",
        "padding": 32,
      }
    }
  >
    <View
      accessible={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "hsl(0, 100%, 100%)",
          "borderRadius": 16,
          "marginHorizontal": 60,
          "maxWidth": 500,
          "paddingBottom": 36,
          "paddingHorizontal": 36,
          "paddingTop": 52,
          "width": "100%",
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "fontSize": 24,
              "fontWeight": "300",
              "letterSpacing": 0,
            },
            undefined,
            undefined,
            Object {
              "paddingBottom": 12,
            },
          ]
        }
      >
        nope
      </Text>
      <Text
        style={
          Array [
            Object {
              "fontSize": 14,
              "fontWeight": "300",
              "letterSpacing": 0.25,
            },
            undefined,
            undefined,
            undefined,
          ]
        }
      >
        yep
      </Text>
      <View
        style={
          Array [
            Object {
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingTop": 52,
            },
            Object {
              "display": "none",
            },
          ]
        }
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "transparent",
              "borderColor": "transparent",
              "borderRadius": 4,
              "borderWidth": 1,
              "color": "hsl(211, 100%, 50%)",
              "flex": 1,
              "flexDirection": "row",
              "height": 36,
              "justifyContent": "center",
              "marginRight": 8,
              "opacity": 1,
              "paddingHorizontal": 16,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "fontSize": 14,
                  "fontWeight": "600",
                  "letterSpacing": 0.75,
                },
                Object {
                  "textAlign": "center",
                },
                undefined,
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "color": "hsl(211, 100%, 50%)",
                  },
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                ],
              ]
            }
          >
            BIRD
          </Text>
        </View>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "transparent",
              "borderColor": "transparent",
              "borderRadius": 4,
              "borderWidth": 1,
              "color": "hsl(211, 100%, 50%)",
              "flex": 1,
              "flexDirection": "row",
              "height": 36,
              "justifyContent": "center",
              "marginLeft": 8,
              "opacity": 1,
              "paddingHorizontal": 16,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "fontSize": 14,
                  "fontWeight": "600",
                  "letterSpacing": 0.75,
                },
                Object {
                  "textAlign": "center",
                },
                undefined,
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "color": "hsl(211, 100%, 50%)",
                  },
                  undefined,
                  Object {
                    "color": "hsl(208, 7%, 46%)",
                  },
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                ],
              ]
            }
          >
            DOG
          </Text>
        </View>
      </View>
    </View>
  </View>
</Modal>
`;

exports[`Dialog component renders dialog to show double buttons beside each other 1`] = `
<Modal
  hardwareAccelerated={false}
  transparent={true}
  visible={true}
>
  <View
    accessible={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "hsla(0, 0%, 0%, 0.5)",
        "flex": 1,
        "flexDirection": "column",
        "justifyContent": "center",
        "padding": 32,
      }
    }
  >
    <View
      accessible={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "hsl(0, 100%, 100%)",
          "borderRadius": 16,
          "marginHorizontal": 60,
          "maxWidth": 500,
          "paddingBottom": 36,
          "paddingHorizontal": 36,
          "paddingTop": 52,
          "width": "100%",
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "fontSize": 24,
              "fontWeight": "300",
              "letterSpacing": 0,
            },
            undefined,
            undefined,
            Object {
              "paddingBottom": 12,
            },
          ]
        }
      >
        bob
      </Text>
      <View
        style={
          Array [
            Object {
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingTop": 52,
            },
            Object {
              "display": "none",
            },
          ]
        }
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "transparent",
              "borderColor": "transparent",
              "borderRadius": 4,
              "borderWidth": 1,
              "color": "hsl(211, 100%, 50%)",
              "flex": 1,
              "flexDirection": "row",
              "height": 36,
              "justifyContent": "center",
              "marginRight": 8,
              "opacity": 1,
              "paddingHorizontal": 16,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "fontSize": 14,
                  "fontWeight": "600",
                  "letterSpacing": 0.75,
                },
                Object {
                  "textAlign": "center",
                },
                undefined,
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "color": "hsl(211, 100%, 50%)",
                  },
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                ],
              ]
            }
          >
            CANCEL
          </Text>
        </View>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "transparent",
              "borderColor": "transparent",
              "borderRadius": 4,
              "borderWidth": 1,
              "color": "hsl(211, 100%, 50%)",
              "flex": 1,
              "flexDirection": "row",
              "height": 36,
              "justifyContent": "center",
              "marginLeft": 8,
              "opacity": 1,
              "paddingHorizontal": 16,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "fontSize": 14,
                  "fontWeight": "600",
                  "letterSpacing": 0.75,
                },
                Object {
                  "textAlign": "center",
                },
                undefined,
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "color": "hsl(211, 100%, 50%)",
                  },
                  undefined,
                  Object {
                    "color": "hsl(208, 7%, 46%)",
                  },
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                ],
              ]
            }
          >
            CONFIRM
          </Text>
        </View>
      </View>
    </View>
  </View>
</Modal>
`;

exports[`Dialog component renders dialog to show single button in center 1`] = `
<Modal
  hardwareAccelerated={false}
  transparent={true}
  visible={true}
>
  <View
    accessible={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "hsla(0, 0%, 0%, 0.5)",
        "flex": 1,
        "flexDirection": "column",
        "justifyContent": "center",
        "padding": 32,
      }
    }
  >
    <View
      accessible={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "hsl(0, 100%, 100%)",
          "borderRadius": 16,
          "marginHorizontal": 60,
          "maxWidth": 500,
          "paddingBottom": 36,
          "paddingHorizontal": 36,
          "paddingTop": 52,
          "width": "100%",
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "fontSize": 24,
              "fontWeight": "300",
              "letterSpacing": 0,
            },
            undefined,
            undefined,
            Object {
              "paddingBottom": 12,
            },
          ]
        }
      >
        bob
      </Text>
      <View
        style={
          Array [
            Object {
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingTop": 52,
            },
            Object {
              "display": "none",
            },
          ]
        }
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "transparent",
              "borderColor": "transparent",
              "borderRadius": 4,
              "borderWidth": 1,
              "color": "hsl(211, 100%, 50%)",
              "flexDirection": "row",
              "height": 36,
              "justifyContent": "center",
              "opacity": 1,
              "paddingHorizontal": 16,
              "width": "50%",
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "fontSize": 14,
                  "fontWeight": "600",
                  "letterSpacing": 0.75,
                },
                Object {
                  "textAlign": "center",
                },
                undefined,
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "color": "hsl(211, 100%, 50%)",
                  },
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                ],
              ]
            }
          >
            CANCEL
          </Text>
        </View>
      </View>
    </View>
  </View>
</Modal>
`;
