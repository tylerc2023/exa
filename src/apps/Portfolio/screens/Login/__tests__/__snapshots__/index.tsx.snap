// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "backgroundColor": "hsl(0, 0%, 100%)",
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "borderBottomColor": "hsl(208, 7%, 46%)",
        "borderBottomWidth": 0,
        "flexDirection": "row",
        "height": 72,
        "justifyContent": "space-between",
      }
    }
  >
    <View
      style={
        Object {
          "flex": 0.2,
          "padding": 12,
        }
      }
    >
      <View
        accessible={true}
        focusable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": "hsl(208, 7%, 46%)",
                "fontSize": 36,
              },
              Array [
                undefined,
                undefined,
              ],
              Object {
                "fontFamily": "Material Design Icons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
    </View>
    <Text
      style={
        Object {
          "color": "hsla(0, 0%, 0%, 1)",
          "fontSize": 40,
          "fontWeight": "100",
          "letterSpacing": -0.5,
          "opacity": 1,
        }
      }
    >
      Login
    </Text>
    <View
      style={
        Object {
          "flex": 0.2,
          "padding": 12,
        }
      }
    />
  </View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "hsl(0, 0%, 100%)",
          "flex": 1,
        },
        Object {
          "padding": 16,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          undefined,
          undefined,
        ]
      }
    >
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      >
        <View
          accessible={true}
          focusable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "transparent",
              "borderColor": "transparent",
              "borderRadius": 4,
              "borderWidth": 1,
              "flexDirection": "row",
              "justifyContent": "center",
              "opacity": 1,
              "padding": 0,
              "paddingHorizontal": 0,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "hsl(0, 0%, 0%)",
                "fontSize": 14,
                "fontWeight": "300",
                "letterSpacing": 0.25,
                "opacity": 1,
                "textAlign": "center",
              }
            }
          >
            email
          </Text>
        </View>
      </View>
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      >
        <TextInput
          allowFontScaling={true}
          blurOnSubmit={true}
          disableFullscreenUI={true}
          editable={true}
          onBlur={[Function]}
          onChangeText={[Function]}
          onFocus={[Function]}
          placeholder="example@gmail.com"
          placeholderTextColor="hsl(208, 7%, 46%)"
          rejectResponderTermination={true}
          selectionColor="hsl(211, 100%, 50%)"
          style={
            Array [
              Object {
                "backgroundColor": "hsl(0, 0%, 100%)",
                "borderColor": "hsl(208, 7%, 46%)",
                "borderRadius": 4,
                "borderWidth": 2,
                "color": "hsl(0, 0%, 0%)",
                "padding": 8,
                "paddingRight": 32,
                "width": "100%",
              },
              undefined,
              undefined,
              Object {
                "fontSize": 14,
                "fontWeight": "300",
                "letterSpacing": 0.25,
              },
              undefined,
            ]
          }
          textContentType="none"
          underlineColorAndroid="transparent"
          value=""
        />
      </View>
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      >
        <View
          accessible={true}
          focusable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "hsl(354, 70%, 54%)",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "opacity": 0,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "Material Design Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
        <View
          accessible={true}
          focusable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "transparent",
              "borderColor": "transparent",
              "borderRadius": 4,
              "borderWidth": 1,
              "flexDirection": "row",
              "justifyContent": "center",
              "opacity": 0,
              "padding": 0,
              "paddingHorizontal": 0,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "hsl(354, 70%, 54%)",
                "fontSize": 14,
                "fontWeight": "300",
                "letterSpacing": 0.25,
                "opacity": 1,
                "textAlign": "center",
              }
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
    <View
      style={
        Array [
          undefined,
          undefined,
        ]
      }
    >
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      >
        <View
          accessible={true}
          focusable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "transparent",
              "borderColor": "transparent",
              "borderRadius": 4,
              "borderWidth": 1,
              "flexDirection": "row",
              "justifyContent": "center",
              "opacity": 1,
              "padding": 0,
              "paddingHorizontal": 0,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "hsl(0, 0%, 0%)",
                "fontSize": 14,
                "fontWeight": "300",
                "letterSpacing": 0.25,
                "opacity": 1,
                "textAlign": "center",
              }
            }
          >
            password
          </Text>
        </View>
      </View>
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      >
        <TextInput
          allowFontScaling={true}
          blurOnSubmit={true}
          disableFullscreenUI={true}
          editable={true}
          onBlur={[Function]}
          onChangeText={[Function]}
          onFocus={[Function]}
          placeholder="•••••••"
          placeholderTextColor="hsl(208, 7%, 46%)"
          rejectResponderTermination={true}
          selectionColor="hsl(211, 100%, 50%)"
          style={
            Array [
              Object {
                "backgroundColor": "hsl(0, 0%, 100%)",
                "borderColor": "hsl(208, 7%, 46%)",
                "borderRadius": 4,
                "borderWidth": 2,
                "color": "hsl(0, 0%, 0%)",
                "padding": 8,
                "paddingRight": 32,
                "width": "100%",
              },
              undefined,
              undefined,
              Object {
                "fontSize": 14,
                "fontWeight": "300",
                "letterSpacing": 0.25,
              },
              undefined,
            ]
          }
          textContentType="none"
          underlineColorAndroid="transparent"
          value=""
        />
      </View>
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      >
        <View
          accessible={true}
          focusable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "hsl(354, 70%, 54%)",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "opacity": 0,
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "Material Design Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
        <View
          accessible={true}
          focusable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "transparent",
              "borderColor": "transparent",
              "borderRadius": 4,
              "borderWidth": 1,
              "flexDirection": "row",
              "justifyContent": "center",
              "opacity": 0,
              "padding": 0,
              "paddingHorizontal": 0,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "hsl(354, 70%, 54%)",
                "fontSize": 14,
                "fontWeight": "300",
                "letterSpacing": 0.25,
                "opacity": 1,
                "textAlign": "center",
              }
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
          "justifyContent": "space-around",
        }
      }
    >
      <View
        accessible={true}
        focusable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "borderColor": "transparent",
            "borderRadius": 4,
            "borderWidth": 1,
            "flexDirection": "row",
            "justifyContent": "center",
            "opacity": 1,
            "padding": 8,
            "paddingHorizontal": 16,
          }
        }
      >
        <Text
          style={
            Object {
              "color": "hsl(0, 0%, 0%)",
              "fontSize": 14,
              "fontWeight": "600",
              "letterSpacing": 0.75,
              "opacity": 1,
              "textAlign": "center",
            }
          }
        >
          LOGIN
        </Text>
      </View>
      <View
        accessible={true}
        focusable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "borderColor": "transparent",
            "borderRadius": 4,
            "borderWidth": 1,
            "flexDirection": "row",
            "justifyContent": "center",
            "opacity": 1,
            "padding": 8,
            "paddingHorizontal": 16,
          }
        }
      >
        <Text
          style={
            Object {
              "color": "hsl(0, 0%, 0%)",
              "fontSize": 14,
              "fontWeight": "600",
              "letterSpacing": 0.75,
              "opacity": 1,
              "textAlign": "center",
            }
          }
        >
          FORGOT
        </Text>
      </View>
    </View>
  </View>
</RCTSafeAreaView>
`;
