// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "hsl(0, 0%, 100%)",
      "flex": 1,
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "borderBottomColor": "hsl(0, 0%, 100%)",
          "borderBottomWidth": 1,
          "flexDirection": "row",
          "height": 72,
          "justifyContent": "space-between",
        }
      }
    >
      <View
        style={
          Object {
            "flex": 0.2,
            "padding": 12,
          }
        }
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "hsl(208, 7%, 46%)",
                  "fontSize": 36,
                },
                Array [
                  undefined,
                  undefined,
                ],
                Object {
                  "fontFamily": "Material Design Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            Û∞ÖÅ
          </Text>
        </View>
      </View>
      <Text
        style={
          Object {
            "color": "hsla(0, 0%, 0%, 1)",
            "fontSize": 40,
            "fontWeight": "100",
            "letterSpacing": -0.5,
            "opacity": 1,
          }
        }
      >
        Settings
      </Text>
      <View
        style={
          Object {
            "flex": 0.2,
            "padding": 12,
          }
        }
      />
    </View>
    <View
      style={
        Array [
          Object {
            "backgroundColor": "hsl(0, 0%, 100%)",
            "flex": 1,
          },
          undefined,
          undefined,
        ]
      }
    >
      <RCTScrollView
        ListHeaderComponent={[Function]}
        data={
          Array [
            "light",
            "dark",
          ]
        }
        disableVirtualization={false}
        getItem={[Function]}
        getItemCount={[Function]}
        horizontal={true}
        initialNumToRender={10}
        keyExtractor={[Function]}
        maxToRenderPerBatch={10}
        onContentSizeChange={[Function]}
        onEndReachedThreshold={2}
        onLayout={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        removeClippedSubviews={false}
        renderItem={[Function]}
        scrollEventThrottle={50}
        stickyHeaderIndices={Array []}
        updateCellsBatchingPeriod={50}
        viewabilityConfigCallbackPairs={Array []}
        windowSize={21}
      >
        <View>
          <View
            onLayout={[Function]}
          >
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "borderColor": "transparent",
                  "borderRadius": 4,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "opacity": 1,
                  "padding": 8,
                  "paddingHorizontal": 16,
                }
              }
            >
              <Text
                style={
                  Object {
                    "color": "hsla(0, 0%, 0%, 0.38)",
                    "fontSize": 14,
                    "fontWeight": "600",
                    "letterSpacing": 0.75,
                    "opacity": 1,
                    "textAlign": "center",
                  }
                }
              >
                THEME
              </Text>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={
              Array [
                Object {
                  "flexDirection": "row",
                },
                null,
              ]
            }
          >
            <View>
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "transparent",
                    "borderColor": "transparent",
                    "borderRadius": 4,
                    "borderWidth": 1,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "opacity": 1,
                    "padding": 8,
                    "paddingHorizontal": 16,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "hsl(211, 100%, 50%)",
                      "fontSize": 14,
                      "fontWeight": "600",
                      "letterSpacing": 0.75,
                      "opacity": 1,
                      "textAlign": "center",
                    }
                  }
                >
                  LIGHT
                </Text>
              </View>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={
              Array [
                Object {
                  "flexDirection": "row",
                },
                null,
              ]
            }
          >
            <View>
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "transparent",
                    "borderColor": "transparent",
                    "borderRadius": 4,
                    "borderWidth": 1,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "opacity": 1,
                    "padding": 8,
                    "paddingHorizontal": 16,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "hsl(0, 0%, 0%)",
                      "fontSize": 14,
                      "fontWeight": "600",
                      "letterSpacing": 0.75,
                      "opacity": 1,
                      "textAlign": "center",
                    }
                  }
                >
                  DARK
                </Text>
              </View>
            </View>
          </View>
        </View>
      </RCTScrollView>
    </View>
  </RCTSafeAreaView>
  <View
    style={
      Array [
        Object {
          "bottom": 0,
          "left": 0,
          "right": 0,
        },
        Object {
          "height": 0,
        },
        undefined,
      ]
    }
  />
</View>
`;
