// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Array [
      Object {
        "backgroundColor": "hsl(0, 0%, 100%)",
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "space-between",
      }
    }
  >
    <View
      accessible={true}
      clickable={true}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "flex": 1,
          "opacity": 1,
          "padding": 12,
        }
      }
    >
      <View>
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": "hsl(210, 10%, 23%)",
                "fontSize": 24,
              },
              Array [
                undefined,
                undefined,
              ],
              Object {
                "fontFamily": "Material Design Icons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          ÔÅç
        </Text>
      </View>
    </View>
    <View
      accessible={true}
      clickable={false}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "flex": 1,
          "opacity": 1,
          "padding": 12,
        }
      }
    />
  </View>
  <RCTScrollView
    automaticallyAdjustContentInsets={false}
    contentContainerStyle={
      Array [
        Object {
          "backgroundColor": "hsl(0, 0%, 100%)",
          "flex": 1,
        },
        undefined,
      ]
    }
    contentInset={
      Object {
        "bottom": 0,
      }
    }
    enableAutomaticScroll={true}
    enableOnAndroid={false}
    enableResetScrollToCoords={true}
    extraHeight={75}
    extraScrollHeight={0}
    getScrollResponder={[Function]}
    handleOnScroll={[Function]}
    keyboardDismissMode="interactive"
    keyboardOpeningTime={250}
    keyboardShouldPersistTaps="handled"
    keyboardSpace={0}
    onScroll={[Function]}
    resetKeyboardSpace={[Function]}
    scrollEnabled={true}
    scrollEventThrottle={1}
    scrollForExtraHeightOnAndroid={[Function]}
    scrollIntoView={[Function]}
    scrollToEnd={[Function]}
    scrollToFocusedInput={[Function]}
    scrollToPosition={[Function]}
    showsVerticalScrollIndicator={true}
    update={[Function]}
    viewIsInsideTabBar={false}
  >
    <View>
      <Text
        style={
          Object {
            "color": "hsl(0, 0%, 0%)",
            "fontSize": 48,
            "fontWeight": "100",
            "letterSpacing": -1.5,
            "opacity": 1,
            "textAlign": "center",
          }
        }
      >
        Settings
      </Text>
      <RCTScrollView
        ListHeaderComponent={[Function]}
        data={
          Array [
            "light",
            "dark",
          ]
        }
        disableVirtualization={false}
        getItem={[Function]}
        getItemCount={[Function]}
        horizontal={true}
        initialNumToRender={10}
        keyExtractor={[Function]}
        maxToRenderPerBatch={10}
        numColumns={1}
        onContentSizeChange={[Function]}
        onEndReachedThreshold={2}
        onLayout={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        removeClippedSubviews={false}
        renderItem={[Function]}
        scrollEventThrottle={50}
        stickyHeaderIndices={Array []}
        updateCellsBatchingPeriod={50}
        viewabilityConfigCallbackPairs={Array []}
        windowSize={21}
      >
        <View>
          <View
            onLayout={[Function]}
          >
            <View
              accessible={true}
              clickable={false}
              isTVSelectable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "borderColor": "transparent",
                  "borderRadius": 4,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "height": 36,
                  "justifyContent": "center",
                  "opacity": 1,
                  "paddingHorizontal": 16,
                }
              }
            >
              <Text
                style={
                  Object {
                    "color": "hsl(208, 7%, 46%)",
                    "fontSize": 14,
                    "fontWeight": "600",
                    "letterSpacing": 0.75,
                    "opacity": 1,
                    "textAlign": "center",
                  }
                }
              >
                THEME
              </Text>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={
              Array [
                Object {
                  "flexDirection": "row",
                },
                null,
              ]
            }
          >
            <View
              accessible={true}
              clickable={true}
              isTVSelectable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "hsl(211, 100%, 50%)",
                  "borderColor": "transparent",
                  "borderRadius": 4,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "height": 36,
                  "justifyContent": "center",
                  "opacity": 1,
                  "paddingHorizontal": 16,
                }
              }
            >
              <Text
                style={
                  Object {
                    "color": "hsl(0, 0%, 100%)",
                    "fontSize": 14,
                    "fontWeight": "600",
                    "letterSpacing": 0.75,
                    "opacity": 1,
                    "textAlign": "center",
                  }
                }
              >
                LIGHT
              </Text>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={
              Array [
                Object {
                  "flexDirection": "row",
                },
                null,
              ]
            }
          >
            <View
              accessible={true}
              clickable={true}
              isTVSelectable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "borderColor": "transparent",
                  "borderRadius": 4,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "height": 36,
                  "justifyContent": "center",
                  "opacity": 1,
                  "paddingHorizontal": 16,
                }
              }
            >
              <Text
                style={
                  Object {
                    "color": "hsl(208, 7%, 46%)",
                    "fontSize": 14,
                    "fontWeight": "600",
                    "letterSpacing": 0.75,
                    "opacity": 1,
                    "textAlign": "center",
                  }
                }
              >
                DARK
              </Text>
            </View>
          </View>
        </View>
      </RCTScrollView>
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <Text
          style={
            Object {
              "color": "hsl(0, 0%, 0%)",
              "flex": 1,
              "fontSize": 14,
              "fontWeight": "300",
              "letterSpacing": 0.25,
              "opacity": 1,
              "textAlign": "center",
              "textAlignVertical": "center",
            }
          }
        >
          hello
        </Text>
      </View>
    </View>
  </RCTScrollView>
</RCTSafeAreaView>
`;
