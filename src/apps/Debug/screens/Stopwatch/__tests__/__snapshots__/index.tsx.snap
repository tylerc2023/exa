// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "backgroundColor": "hsl(0, 0%, 100%)",
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "borderBottomColor": "hsl(210, 10%, 23%)",
        "borderBottomWidth": 0,
        "flexDirection": "row",
        "height": 72,
        "justifyContent": "space-between",
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "flex": 0.2,
          "opacity": 1,
          "padding": 12,
        }
      }
    >
      <View>
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": "hsl(210, 10%, 23%)",
                "fontSize": 24,
              },
              Array [
                undefined,
                undefined,
              ],
              Object {
                "fontFamily": "Material Design Icons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          ÔÅç
        </Text>
      </View>
    </View>
    <View
      accessible={true}
      focusable={false}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "flex": 0.2,
          "opacity": 1,
          "padding": 12,
        }
      }
    />
  </View>
  <RCTScrollView
    automaticallyAdjustContentInsets={false}
    contentContainerStyle={
      Array [
        Object {
          "flex": 1,
          "padding": 0,
        },
        Object {
          "alignItems": "center",
          "backgroundColor": "#0D0D0D",
          "flex": 1,
          "paddingHorizontal": 20,
          "paddingTop": 130,
        },
      ]
    }
    contentInset={
      Object {
        "bottom": 0,
      }
    }
    enableAutomaticScroll={true}
    enableOnAndroid={false}
    enableResetScrollToCoords={true}
    extraHeight={75}
    extraScrollHeight={0}
    getScrollResponder={[Function]}
    handleOnScroll={[Function]}
    keyboardDismissMode="interactive"
    keyboardOpeningTime={250}
    keyboardShouldPersistTaps="handled"
    keyboardSpace={0}
    onScroll={[Function]}
    resetKeyboardSpace={[Function]}
    scrollEnabled={true}
    scrollEventThrottle={1}
    scrollForExtraHeightOnAndroid={[Function]}
    scrollIntoView={[Function]}
    scrollToEnd={[Function]}
    scrollToFocusedInput={[Function]}
    scrollToPosition={[Function]}
    showsVerticalScrollIndicator={true}
    update={[Function]}
    viewIsInsideTabBar={false}
  >
    <View>
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      >
        <Text
          style={
            Object {
              "color": "#FFFFFF",
              "fontFamily": "Courier",
              "fontSize": 54,
              "fontWeight": "200",
            }
          }
        >
          00
          :
        </Text>
        <Text
          style={
            Object {
              "color": "#FFFFFF",
              "fontFamily": "Courier",
              "fontSize": 54,
              "fontWeight": "200",
            }
          }
        >
          00
          .
        </Text>
        <Text
          style={
            Object {
              "color": "#FFFFFF",
              "fontFamily": "Courier",
              "fontSize": 54,
              "fontWeight": "200",
            }
          }
        >
          00
        </Text>
      </View>
      <View
        style={
          Object {
            "alignSelf": "stretch",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "marginBottom": 30,
            "marginTop": 80,
          }
        }
      >
        <View
          accessible={true}
          focusable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#151515",
              "borderRadius": 40,
              "height": 80,
              "justifyContent": "center",
              "opacity": 1,
              "width": 80,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "borderRadius": 38,
                "borderWidth": 1,
                "height": 76,
                "justifyContent": "center",
                "width": 76,
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "fontSize": 18,
                  },
                  Object {
                    "color": "#8B8B90",
                  },
                ]
              }
            >
              Lap
            </Text>
          </View>
        </View>
        <View
          accessible={true}
          focusable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#1B361F",
              "borderRadius": 40,
              "height": 80,
              "justifyContent": "center",
              "opacity": 1,
              "width": 80,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "borderRadius": 38,
                "borderWidth": 1,
                "height": 76,
                "justifyContent": "center",
                "width": 76,
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "fontSize": 18,
                  },
                  Object {
                    "color": "#50D167",
                  },
                ]
              }
            >
              Start
            </Text>
          </View>
        </View>
      </View>
      <RCTScrollView
        style={
          Object {
            "alignSelf": "stretch",
          }
        }
      >
        <View />
      </RCTScrollView>
    </View>
  </RCTScrollView>
</RCTSafeAreaView>
`;
