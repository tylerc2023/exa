// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "backgroundColor": "hsl(0, 0%, 100%)",
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "borderBottomColor": "hsl(208, 7%, 46%)",
        "borderBottomWidth": 0,
        "flexDirection": "row",
        "height": 72,
        "justifyContent": "space-between",
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "flex": 0.2,
          "opacity": 1,
          "padding": 12,
        }
      }
    >
      <View>
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": "hsl(208, 7%, 46%)",
                "fontSize": 24,
              },
              Array [
                undefined,
                undefined,
              ],
              Object {
                "fontFamily": "Material Design Icons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          ÔÅç
        </Text>
      </View>
    </View>
    <View
      accessible={true}
      focusable={false}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "flex": 0.2,
          "opacity": 1,
          "padding": 12,
        }
      }
    />
  </View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "hsl(0, 0%, 100%)",
          "flex": 1,
        },
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        Object {
          "borderColor": "black",
          "borderRadius": 30,
          "borderWidth": 30,
          "height": 60,
          "left": 375,
          "marginLeft": -30,
          "marginTop": -30,
          "top": 667,
          "width": 60,
        }
      }
    />
    <View
      style={
        Object {
          "flex": 1,
          "flexDirection": "row",
          "justifyContent": "space-around",
        }
      }
    >
      <View
        accessible={true}
        focusable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "borderColor": "transparent",
            "borderRadius": 4,
            "borderWidth": 1,
            "flexDirection": "row",
            "height": 36,
            "justifyContent": "center",
            "opacity": 1,
            "paddingHorizontal": 16,
          }
        }
      >
        <Text
          style={
            Object {
              "color": "hsl(0, 0%, 0%)",
              "fontSize": 14,
              "fontWeight": "600",
              "letterSpacing": 0.75,
              "opacity": 1,
              "textAlign": "center",
            }
          }
        >
          INITIAL
        </Text>
      </View>
      <View
        accessible={true}
        focusable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "borderColor": "transparent",
            "borderRadius": 4,
            "borderWidth": 1,
            "flexDirection": "row",
            "height": 36,
            "justifyContent": "center",
            "opacity": 1,
            "paddingHorizontal": 16,
          }
        }
      >
        <Text
          style={
            Object {
              "color": "hsl(0, 0%, 0%)",
              "fontSize": 14,
              "fontWeight": "600",
              "letterSpacing": 0.75,
              "opacity": 1,
              "textAlign": "center",
            }
          }
        >
          RANDOM
        </Text>
      </View>
    </View>
  </View>
</RCTSafeAreaView>
`;
