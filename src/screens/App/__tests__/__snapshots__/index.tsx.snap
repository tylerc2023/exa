// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<RCTSafeAreaView
  style={
    Array [
      Object {
        "backgroundColor": "hsl(0, 100%, 100%)",
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "hsl(0, 100%, 100%)",
        "flexDirection": "row",
        "justifyContent": "space-between",
      }
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "flex": 1,
          "opacity": 1,
          "padding": 12,
        }
      }
    >
      <View>
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": "hsl(210, 10%, 23%)",
                "fontSize": 24,
              },
              undefined,
              Object {
                "fontFamily": "Material Design Icons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          ÔÅç
        </Text>
      </View>
    </View>
  </View>
  <RCTScrollView
    automaticallyAdjustContentInsets={false}
    contentContainerStyle={
      Object {
        "backgroundColor": "hsl(0, 100%, 100%)",
        "flex": 1,
      }
    }
    contentInset={
      Object {
        "bottom": 0,
      }
    }
    enableAutomaticScroll={true}
    enableOnAndroid={false}
    enableResetScrollToCoords={true}
    extraHeight={75}
    extraScrollHeight={0}
    getScrollResponder={[Function]}
    handleOnScroll={[Function]}
    keyboardDismissMode="interactive"
    keyboardOpeningTime={250}
    keyboardShouldPersistTaps="handled"
    keyboardSpace={0}
    onScroll={[Function]}
    resetKeyboardSpace={[Function]}
    scrollEnabled={true}
    scrollEventThrottle={1}
    scrollForExtraHeightOnAndroid={[Function]}
    scrollIntoView={[Function]}
    scrollToEnd={[Function]}
    scrollToFocusedInput={[Function]}
    scrollToPosition={[Function]}
    showsVerticalScrollIndicator={true}
    update={[Function]}
    viewIsInsideTabBar={false}
  >
    <View>
      <View
        style={
          Object {
            "backgroundColor": "hsl(210, 17%, 98%)",
            "flex": 1,
            "padding": 20,
          }
        }
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "flexDirection": "row",
              "opacity": 1,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "fontSize": 14,
                  "fontWeight": "300",
                  "letterSpacing": 0.25,
                },
                undefined,
                undefined,
                Object {
                  "textTransform": "capitalize",
                },
              ]
            }
          >
            Name
          </Text>
          <Text
            style={
              Array [
                Object {
                  "fontSize": 14,
                  "fontWeight": "300",
                  "letterSpacing": 0.25,
                },
                undefined,
                undefined,
                Array [
                  Object {
                    "textTransform": "capitalize",
                  },
                  Object {
                    "color": "hsl(208, 7%, 46%)",
                  },
                ],
              ]
            }
          >
             - Optional
          </Text>
        </View>
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <TextInput
            allowFontScaling={true}
            blurOnSubmit={true}
            disableFullscreenUI={true}
            editable={true}
            onBlur={[Function]}
            onChangeText={[Function]}
            onFocus={[Function]}
            placeholder="jane doe"
            placeholderTextColor="hsl(208, 7%, 46%)"
            selectionColor="hsl(211, 100%, 50%)"
            style={
              Array [
                Object {
                  "backgroundColor": "hsl(0, 100%, 100%)",
                  "borderColor": "hsl(208, 7%, 46%)",
                  "borderRadius": 4,
                  "borderWidth": 2,
                  "flex": 1,
                  "marginTop": 4,
                  "padding": 8,
                  "paddingRight": 32,
                },
                "",
                false,
                Object {
                  "fontSize": 14,
                  "fontWeight": "300",
                  "letterSpacing": 0.25,
                },
                undefined,
              ]
            }
            underlineColorAndroid="transparent"
            value=""
          />
        </View>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "flex-start",
              "backgroundColor": "transparent",
              "borderColor": "transparent",
              "borderRadius": 4,
              "borderWidth": 1,
              "color": "hsl(211, 100%, 50%)",
              "flexDirection": "row",
              "height": 20,
              "justifyContent": "flex-start",
              "marginBottom": 8,
              "opacity": 1,
              "paddingHorizontal": 0,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "fontSize": 14,
                  "fontWeight": "300",
                  "letterSpacing": 0.25,
                },
                Object {
                  "textAlign": "center",
                },
                undefined,
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "color": "hsl(211, 100%, 50%)",
                  },
                  undefined,
                  undefined,
                  Object {
                    "color": "hsl(354, 70%, 54%)",
                  },
                  undefined,
                  undefined,
                  undefined,
                ],
              ]
            }
          >
             
          </Text>
        </View>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "flexDirection": "row",
              "opacity": 1,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "fontSize": 14,
                  "fontWeight": "300",
                  "letterSpacing": 0.25,
                },
                undefined,
                undefined,
                Object {
                  "textTransform": "capitalize",
                },
              ]
            }
          >
            EMAIL
          </Text>
        </View>
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <TextInput
            allowFontScaling={true}
            blurOnSubmit={true}
            disableFullscreenUI={true}
            editable={true}
            keyboardType="email-address"
            onBlur={[Function]}
            onChangeText={[Function]}
            onFocus={[Function]}
            placeholder="example@gmail.com"
            placeholderTextColor="hsl(208, 7%, 46%)"
            selectionColor="hsl(211, 100%, 50%)"
            style={
              Array [
                Object {
                  "backgroundColor": "hsl(0, 100%, 100%)",
                  "borderColor": "hsl(208, 7%, 46%)",
                  "borderRadius": 4,
                  "borderWidth": 2,
                  "flex": 1,
                  "marginTop": 4,
                  "padding": 8,
                  "paddingRight": 32,
                },
                "",
                false,
                Object {
                  "fontSize": 14,
                  "fontWeight": "300",
                  "letterSpacing": 0.25,
                },
                undefined,
              ]
            }
            underlineColorAndroid="transparent"
            value=""
          />
        </View>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "flex-start",
              "backgroundColor": "transparent",
              "borderColor": "transparent",
              "borderRadius": 4,
              "borderWidth": 1,
              "color": "hsl(211, 100%, 50%)",
              "flexDirection": "row",
              "height": 20,
              "justifyContent": "flex-start",
              "marginBottom": 8,
              "opacity": 1,
              "paddingHorizontal": 0,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "fontSize": 14,
                  "fontWeight": "300",
                  "letterSpacing": 0.25,
                },
                Object {
                  "textAlign": "center",
                },
                undefined,
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "color": "hsl(211, 100%, 50%)",
                  },
                  undefined,
                  undefined,
                  Object {
                    "color": "hsl(354, 70%, 54%)",
                  },
                  undefined,
                  undefined,
                  undefined,
                ],
              ]
            }
          >
             
          </Text>
        </View>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "flexDirection": "row",
              "opacity": 1,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "fontSize": 14,
                  "fontWeight": "300",
                  "letterSpacing": 0.25,
                },
                undefined,
                undefined,
                Object {
                  "textTransform": "capitalize",
                },
              ]
            }
          >
            Password
          </Text>
        </View>
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <TextInput
            allowFontScaling={true}
            blurOnSubmit={true}
            disableFullscreenUI={true}
            editable={true}
            onBlur={[Function]}
            onChangeText={[Function]}
            onFocus={[Function]}
            placeholder="‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢"
            placeholderTextColor="hsl(208, 7%, 46%)"
            secureTextEntry={true}
            selectionColor="hsl(211, 100%, 50%)"
            style={
              Array [
                Object {
                  "backgroundColor": "hsl(0, 100%, 100%)",
                  "borderColor": "hsl(208, 7%, 46%)",
                  "borderRadius": 4,
                  "borderWidth": 2,
                  "flex": 1,
                  "marginTop": 4,
                  "padding": 8,
                  "paddingRight": 32,
                },
                undefined,
                false,
                Object {
                  "fontSize": 14,
                  "fontWeight": "300",
                  "letterSpacing": 0.25,
                },
                undefined,
              ]
            }
            underlineColorAndroid="transparent"
            value=""
          />
        </View>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "flex-start",
              "backgroundColor": "transparent",
              "borderColor": "transparent",
              "borderRadius": 4,
              "borderWidth": 1,
              "color": "hsl(211, 100%, 50%)",
              "flexDirection": "row",
              "height": 20,
              "justifyContent": "flex-start",
              "marginBottom": 8,
              "opacity": 1,
              "paddingHorizontal": 0,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "fontSize": 14,
                  "fontWeight": "300",
                  "letterSpacing": 0.25,
                },
                Object {
                  "textAlign": "center",
                },
                undefined,
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "color": "hsl(211, 100%, 50%)",
                  },
                  undefined,
                  undefined,
                  Object {
                    "color": "hsl(354, 70%, 54%)",
                  },
                  undefined,
                  undefined,
                  undefined,
                ],
              ]
            }
          >
             
          </Text>
        </View>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "hsl(211, 100%, 50%)",
              "borderColor": "transparent",
              "borderRadius": 4,
              "borderWidth": 1,
              "flexDirection": "row",
              "height": 36,
              "justifyContent": "center",
              "opacity": 1,
              "paddingHorizontal": 16,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "fontSize": 14,
                  "fontWeight": "600",
                  "letterSpacing": 0.75,
                },
                Object {
                  "textAlign": "center",
                },
                undefined,
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "color": "hsl(211, 100%, 50%)",
                  },
                  undefined,
                  undefined,
                  undefined,
                  Object {
                    "color": "hsl(0, 100%, 100%)",
                  },
                  undefined,
                  undefined,
                ],
              ]
            }
          >
            COMPLETE FORM
          </Text>
        </View>
      </View>
    </View>
  </RCTScrollView>
</RCTSafeAreaView>
`;
