// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Array [
        Object {
          "backgroundColor": "hsl(0, 0%, 100%)",
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "space-between",
        }
      }
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "flex": 1,
            "opacity": 1,
            "padding": 12,
          }
        }
      />
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "flex": 1,
            "opacity": 1,
            "padding": 12,
          }
        }
      />
    </View>
    <RCTScrollView
      automaticallyAdjustContentInsets={false}
      contentContainerStyle={
        Array [
          Object {
            "backgroundColor": "hsl(0, 0%, 100%)",
            "flex": 1,
          },
          undefined,
        ]
      }
      contentInset={
        Object {
          "bottom": 0,
        }
      }
      enableAutomaticScroll={true}
      enableOnAndroid={false}
      enableResetScrollToCoords={true}
      extraHeight={75}
      extraScrollHeight={0}
      getScrollResponder={[Function]}
      handleOnScroll={[Function]}
      keyboardDismissMode="interactive"
      keyboardOpeningTime={250}
      keyboardShouldPersistTaps="handled"
      keyboardSpace={0}
      onScroll={[Function]}
      resetKeyboardSpace={[Function]}
      scrollEnabled={true}
      scrollEventThrottle={1}
      scrollForExtraHeightOnAndroid={[Function]}
      scrollIntoView={[Function]}
      scrollToEnd={[Function]}
      scrollToFocusedInput={[Function]}
      scrollToPosition={[Function]}
      showsVerticalScrollIndicator={true}
      update={[Function]}
      viewIsInsideTabBar={false}
    >
      <View>
        <Text
          style={
            Object {
              "color": "hsl(0, 0%, 0%)",
              "fontSize": 48,
              "fontWeight": "100",
              "letterSpacing": -1.5,
              "opacity": 1,
              "textAlign": "center",
            }
          }
        >
          Landing
        </Text>
        <RCTScrollView
          data={
            Array [
              Object {
                "color": "lightgrey",
                "key": 1,
                "text": "hello",
              },
              Object {
                "color": "lightblue",
                "key": 2,
                "text": "bob",
              },
              Object {
                "color": "lightgreen",
                "key": 3,
                "text": "steve",
              },
              Object {
                "color": "lightpink",
                "key": 4,
                "text": "jill",
              },
            ]
          }
          disableVirtualization={false}
          getItem={[Function]}
          getItemCount={[Function]}
          horizontal={true}
          initialNumToRender={10}
          keyExtractor={[Function]}
          maxToRenderPerBatch={10}
          numColumns={1}
          onContentSizeChange={[Function]}
          onEndReachedThreshold={2}
          onLayout={[Function]}
          onMomentumScrollEnd={[Function]}
          onScroll={[Function]}
          onScrollBeginDrag={[Function]}
          onScrollEndDrag={[Function]}
          pagingEnabled={true}
          removeClippedSubviews={false}
          renderItem={[Function]}
          scrollEventThrottle={50}
          stickyHeaderIndices={Array []}
          updateCellsBatchingPeriod={50}
          viewabilityConfigCallbackPairs={Array []}
          windowSize={21}
        >
          <View>
            <View
              onLayout={[Function]}
              style={
                Array [
                  Object {
                    "flexDirection": "row",
                  },
                  null,
                ]
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "lightgrey",
                    "justifyContent": "center",
                    "width": 750,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "hsl(0, 0%, 0%)",
                      "fontSize": 14,
                      "fontWeight": "300",
                      "letterSpacing": 0.25,
                      "opacity": 1,
                      "textAlign": "center",
                    }
                  }
                >
                  hello
                </Text>
              </View>
            </View>
            <View
              onLayout={[Function]}
              style={
                Array [
                  Object {
                    "flexDirection": "row",
                  },
                  null,
                ]
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "lightblue",
                    "justifyContent": "center",
                    "width": 750,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "hsl(0, 0%, 0%)",
                      "fontSize": 14,
                      "fontWeight": "300",
                      "letterSpacing": 0.25,
                      "opacity": 1,
                      "textAlign": "center",
                    }
                  }
                >
                  bob
                </Text>
              </View>
            </View>
            <View
              onLayout={[Function]}
              style={
                Array [
                  Object {
                    "flexDirection": "row",
                  },
                  null,
                ]
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "lightgreen",
                    "justifyContent": "center",
                    "width": 750,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "hsl(0, 0%, 0%)",
                      "fontSize": 14,
                      "fontWeight": "300",
                      "letterSpacing": 0.25,
                      "opacity": 1,
                      "textAlign": "center",
                    }
                  }
                >
                  steve
                </Text>
              </View>
            </View>
            <View
              onLayout={[Function]}
              style={
                Array [
                  Object {
                    "flexDirection": "row",
                  },
                  null,
                ]
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "lightpink",
                    "justifyContent": "center",
                    "width": 750,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "hsl(0, 0%, 0%)",
                      "fontSize": 14,
                      "fontWeight": "300",
                      "letterSpacing": 0.25,
                      "opacity": 1,
                      "textAlign": "center",
                    }
                  }
                >
                  jill
                </Text>
              </View>
            </View>
          </View>
        </RCTScrollView>
        <View
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "space-around",
            }
          }
        >
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "borderColor": "transparent",
                "borderRadius": 4,
                "borderWidth": 1,
                "flexDirection": "row",
                "height": 36,
                "justifyContent": "center",
                "opacity": 1,
                "paddingHorizontal": 16,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "hsl(211, 100%, 50%)",
                  "fontSize": 14,
                  "fontWeight": "600",
                  "letterSpacing": 0.75,
                  "opacity": 1,
                  "textAlign": "center",
                }
              }
            >
              LOGIN
            </Text>
          </View>
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "borderColor": "transparent",
                "borderRadius": 4,
                "borderWidth": 1,
                "flexDirection": "row",
                "height": 36,
                "justifyContent": "center",
                "opacity": 1,
                "paddingHorizontal": 16,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "hsl(211, 100%, 50%)",
                  "fontSize": 14,
                  "fontWeight": "600",
                  "letterSpacing": 0.75,
                  "opacity": 1,
                  "textAlign": "center",
                }
              }
            >
              MAIN
            </Text>
          </View>
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "borderColor": "transparent",
                "borderRadius": 4,
                "borderWidth": 1,
                "flexDirection": "row",
                "height": 36,
                "justifyContent": "center",
                "opacity": 1,
                "paddingHorizontal": 16,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "hsl(211, 100%, 50%)",
                  "fontSize": 14,
                  "fontWeight": "600",
                  "letterSpacing": 0.75,
                  "opacity": 1,
                  "textAlign": "center",
                }
              }
            >
              DEBUG
            </Text>
          </View>
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "borderColor": "transparent",
                "borderRadius": 4,
                "borderWidth": 1,
                "flexDirection": "row",
                "height": 36,
                "justifyContent": "center",
                "opacity": 1,
                "paddingHorizontal": 16,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "hsl(211, 100%, 50%)",
                  "fontSize": 14,
                  "fontWeight": "600",
                  "letterSpacing": 0.75,
                  "opacity": 1,
                  "textAlign": "center",
                }
              }
            >
              SETTINGS
            </Text>
          </View>
        </View>
        <View
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "space-around",
            }
          }
        >
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "borderColor": "transparent",
                "borderRadius": 4,
                "borderWidth": 1,
                "flexDirection": "row",
                "height": 36,
                "justifyContent": "center",
                "opacity": 1,
                "paddingHorizontal": 16,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "hsl(211, 100%, 50%)",
                  "fontSize": 14,
                  "fontWeight": "600",
                  "letterSpacing": 0.75,
                  "opacity": 1,
                  "textAlign": "center",
                }
              }
            >
              CHECKLIST
            </Text>
          </View>
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "borderColor": "transparent",
                "borderRadius": 4,
                "borderWidth": 1,
                "flexDirection": "row",
                "height": 36,
                "justifyContent": "center",
                "opacity": 1,
                "paddingHorizontal": 16,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "hsl(211, 100%, 50%)",
                  "fontSize": 14,
                  "fontWeight": "600",
                  "letterSpacing": 0.75,
                  "opacity": 1,
                  "textAlign": "center",
                }
              }
            >
              CANTHURTME
            </Text>
          </View>
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "borderColor": "transparent",
                "borderRadius": 4,
                "borderWidth": 1,
                "flexDirection": "row",
                "height": 36,
                "justifyContent": "center",
                "opacity": 1,
                "paddingHorizontal": 16,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "hsl(211, 100%, 50%)",
                  "fontSize": 14,
                  "fontWeight": "600",
                  "letterSpacing": 0.75,
                  "opacity": 1,
                  "textAlign": "center",
                }
              }
            >
              FOCUS
            </Text>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </RCTSafeAreaView>
</View>
`;
